<script type="text/javascript">

    addValidationClass = function(obj){
        if(obj.hasClassName('validation-passed')){
            obj.removeClassName('validation-passed');
        }
        obj.addClassName('validate-issue-number');
    }

    Validation.addAllThese([
        ['validate-ccsgpdp-number', 'Please enter a valid credit card number.', function(v, elm) {
            // remove non-numerics

            var ccTypeContainer = $(elm.id.substr(0,elm.id.indexOf('_cc_number')) + '_cc_type');
            if (ccTypeContainer && typeof Validation.creditCartTypes.get(ccTypeContainer.value) != 'undefined'
                && Validation.creditCartTypes.get(ccTypeContainer.value)[2] == false) {
                if (!Validation.get('IsEmpty').test(v) && Validation.get('validate-digits').test(v)) {
                    return true;
                } else {
                    return false;
                }
            }

            if (ccTypeContainer.value == 'OT' ||  ccTypeContainer.value == 'UKE' || ccTypeContainer.value == 'DELTA' || ccTypeContainer.value == 'MAESTRO' || ccTypeContainer.value == 'SOLO') {
                return true;
            }

            return validateCreditCard(v);
        }],
        ['validate-ccsgpdp-cvn', 'Please enter a valid credit card verification number.', function(v, elm) {
            var ccTypeContainer = $(elm.id.substr(0,elm.id.indexOf('_cc_cid')) + '_cc_type');
            if (!ccTypeContainer) {
                return true;
            }
            var ccType = ccTypeContainer.value;

            switch (ccType) {
                case 'VI' :
                case 'MC' :
                    re = new RegExp('^[0-9]{3}$');
                    break;
                case 'AE' :
                    re = new RegExp('^[0-9]{4}$');
                    break;
                default:
                    re = new RegExp('^([0-9]{3}|[0-9]{4})?$');
                    break;
            }

            if (v.match(re)) {
                return true;
            }

            return false;
        }],
        ['validate-ccsgpdp-type', 'Credit card number doesn\'t match credit card type', function(v, elm) {
            // remove credit card number delimiters such as "-" and space
            elm.value = removeDelimiters(elm.value);
            v         = removeDelimiters(v);

            var ccTypeContainer = $(elm.id.substr(0,elm.id.indexOf('_cc_number')) + '_cc_type');
            if (!ccTypeContainer) {
                return true;
            }
            var ccType = ccTypeContainer.value;

            // Other card type or switch or solo card
            if (ccType == 'DI' ||  ccType == 'UKE' || ccType == 'DELTA' || ccType == 'MAESTRO' || ccType == 'SOLO') {
                return true;
            }
            // Credit card type detecting regexp
            var ccTypeRegExp = {
                'VI': new RegExp('^4[0-9]{12}([0-9]{3})?$'),
                'MC': new RegExp('^5[1-5][0-9]{14}$'),
                'AE': new RegExp('^3[4-7][0-9]{13}$')
            };

            // Matched credit card type
            var ccMatchedType = '';
            $H(ccTypeRegExp).each(function (pair) {
                if (v.match(pair.value)) {
                    ccMatchedType = pair.key;
                    throw $break;
                }
            });

            if(ccMatchedType != ccType) {
                return false;
            }

            return true;
        }],
        ['validate-ccsgpdp-type-select', 'Card type doesn\'t match credit card number', function(v, elm) {
            var ccNumberContainer = $(elm.id.substr(0,elm.id.indexOf('_cc_type')) + '_cc_number');
            return Validation.get('validate-ccsgpdp-type').test(ccNumberContainer.value, ccNumberContainer);
        }],
        ['validate-issue-number', '<?php echo $this->__('Issue Number must have at least two characters'); ?>', function(v, elm) {

            if(v.length > 0 && !(v.match(new RegExp('^[0-9]{2}$')))){
                return false;
            }

            return true;
        }]
    ]);
</script>

<fieldset class="form-list">
    <?php $_code=$this->getMethodCode() ?>
    <ul id="payment_form_<?php echo $_code ?>" style="display:none">
        <li>
            <div class="input-box">
                <label for="<?php echo $_code ?>_cc_owner"><?php echo $this->__('Name on Card') ?> <span class="required">*</span></label><br/>
                <input type="text" title="<?php echo $this->__('Name on Card') ?>" class="required-entry input-text" id="<?php echo $_code ?>_cc_owner" name="payment[cc_owner]" value="<?php echo $this->htmlEscape($this->getInfoData('cc_owner')) ?>"/>
            </div>
        </li>
        <li>
            <div class="input-box">
                <label for="<?php echo $_code ?>_cc_type"><?php echo $this->__('Credit Card Type') ?> <span class="required">*</span></label><br/>
                <select id="<?php echo $_code ?>_cc_type" name="payment[cc_type]" class="required-entry validate-ccsgpdp-type-select">
                    <option value="">--Please Select--</option>
                    <?php $_ccType = $this->getInfoData('cc_type') ?>
                    <?php foreach ($this->getSagePaymentsAvailableTypes() as $_typeCode => $_typeName): ?>
                        <option value="<?php echo $_typeCode ?>" <?php if($_typeCode==$_ccType): ?>selected="selected"<?php endif ?>><?php echo $_typeName ?></option>
                    <?php endforeach; ?>
                </select>
            </div>
        </li>
        <li>
            <div class="input-box">
                <label for="<?php echo $_code ?>_cc_number"><?php echo $this->__('Credit Card Number') ?> <span class="required">*</span></label><br/>
                <input type="text" id="<?php echo $_code ?>_cc_number" name="payment[cc_number]" title="<?php echo $this->__('Credit Card Number') ?>" class="input-text validate-ccsgpdp-number validate-ccsgpdp-type" value=""/>
            </div>
        </li>
        <li>
            <div class="input-box">
                <label for="<?php echo $_code ?>_expiration"><?php echo $this->__('Expiration Date') ?> <span class="required">*</span></label><br/>
                <div class="v-fix">
                    <select id="<?php echo $_code ?>_expiration" style="width:140px;" name="payment[cc_exp_month]" class="required-entry">
                        <?php $_ccExpMonth = $this->getInfoData('cc_exp_month') ?>
                        <?php foreach ($this->getCcMonths() as $k=>$v): ?>
                            <option value="<?php echo $k?$k:'' ?>" <?php if($k==$_ccExpMonth): ?>selected="selected"<?php endif ?>><?php echo $v ?></option>
                        <?php endforeach; ?>
                    </select>
                </div>
                <div class="v-fix" style="padding-left:5px;">
                    <?php $_ccExpYear = $this->getInfoData('cc_exp_year') ?>
                    <select id="<?php echo $_code ?>_expiration_yr" style="width:103px;" name="payment[cc_exp_year]" class="required-entry">
                        <?php foreach ($this->getCcYears() as $k=>$v): ?>
                            <option value="<?php echo $k?$k:'' ?>" <?php if($k==$_ccExpYear): ?>selected="selected"<?php endif ?>><?php echo $v ?></option>
                        <?php endforeach; ?>
                    </select>
                </div>
            </div>
        </li>
        <?php if($this->hasVerification()): ?>
            <li>
                <div class="input-box">
                    <label for="<?php echo $_code ?>_cc_cid"><?php echo $this->__('Card Verification Number') ?> <span class="required">*</span></label><br/>
                    <div class="v-fix"><input type="text" title="<?php echo $this->__('Card Verification Number') ?>" class="required-entry input-text validate-ccsgpdp-cvn" id="<?php echo $_code ?>_cc_cid" name="payment[cc_cid]" style="width:3em;" value=""/></div>
                    &nbsp;
                    <a href="#" class="cvv-what-is-this"><?php echo $this->__('What is this?') ?></a>
                </div>
            </li>
        <?php endif; ?>

    </ul>
</fieldset>